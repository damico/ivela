package org.ivela.offline.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class FinishedUnitContentExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table finished_unit_content
	 * @ibatorgenerated  Thu Apr 15 14:20:41 BRT 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table finished_unit_content
	 * @ibatorgenerated  Thu Apr 15 14:20:41 BRT 2010
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table finished_unit_content
	 * @ibatorgenerated  Thu Apr 15 14:20:41 BRT 2010
	 */
	public FinishedUnitContentExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table finished_unit_content
	 * @ibatorgenerated  Thu Apr 15 14:20:41 BRT 2010
	 */
	protected FinishedUnitContentExample(FinishedUnitContentExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table finished_unit_content
	 * @ibatorgenerated  Thu Apr 15 14:20:41 BRT 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table finished_unit_content
	 * @ibatorgenerated  Thu Apr 15 14:20:41 BRT 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table finished_unit_content
	 * @ibatorgenerated  Thu Apr 15 14:20:41 BRT 2010
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table finished_unit_content
	 * @ibatorgenerated  Thu Apr 15 14:20:41 BRT 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table finished_unit_content
	 * @ibatorgenerated  Thu Apr 15 14:20:41 BRT 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table finished_unit_content
	 * @ibatorgenerated  Thu Apr 15 14:20:41 BRT 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table finished_unit_content
	 * @ibatorgenerated  Thu Apr 15 14:20:41 BRT 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table finished_unit_content
	 * @ibatorgenerated  Thu Apr 15 14:20:41 BRT 2010
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andSystemUserIsNull() {
			addCriterion("system_user is null");
			return this;
		}

		public Criteria andSystemUserIsNotNull() {
			addCriterion("system_user is not null");
			return this;
		}

		public Criteria andSystemUserEqualTo(Long value) {
			addCriterion("system_user =", value, "systemUser");
			return this;
		}

		public Criteria andSystemUserNotEqualTo(Long value) {
			addCriterion("system_user <>", value, "systemUser");
			return this;
		}

		public Criteria andSystemUserGreaterThan(Long value) {
			addCriterion("system_user >", value, "systemUser");
			return this;
		}

		public Criteria andSystemUserGreaterThanOrEqualTo(Long value) {
			addCriterion("system_user >=", value, "systemUser");
			return this;
		}

		public Criteria andSystemUserLessThan(Long value) {
			addCriterion("system_user <", value, "systemUser");
			return this;
		}

		public Criteria andSystemUserLessThanOrEqualTo(Long value) {
			addCriterion("system_user <=", value, "systemUser");
			return this;
		}

		public Criteria andSystemUserIn(List values) {
			addCriterion("system_user in", values, "systemUser");
			return this;
		}

		public Criteria andSystemUserNotIn(List values) {
			addCriterion("system_user not in", values, "systemUser");
			return this;
		}

		public Criteria andSystemUserBetween(Long value1, Long value2) {
			addCriterion("system_user between", value1, value2, "systemUser");
			return this;
		}

		public Criteria andSystemUserNotBetween(Long value1, Long value2) {
			addCriterion("system_user not between", value1, value2,
					"systemUser");
			return this;
		}

		public Criteria andCourseIsNull() {
			addCriterion("course is null");
			return this;
		}

		public Criteria andCourseIsNotNull() {
			addCriterion("course is not null");
			return this;
		}

		public Criteria andCourseEqualTo(Long value) {
			addCriterion("course =", value, "course");
			return this;
		}

		public Criteria andCourseNotEqualTo(Long value) {
			addCriterion("course <>", value, "course");
			return this;
		}

		public Criteria andCourseGreaterThan(Long value) {
			addCriterion("course >", value, "course");
			return this;
		}

		public Criteria andCourseGreaterThanOrEqualTo(Long value) {
			addCriterion("course >=", value, "course");
			return this;
		}

		public Criteria andCourseLessThan(Long value) {
			addCriterion("course <", value, "course");
			return this;
		}

		public Criteria andCourseLessThanOrEqualTo(Long value) {
			addCriterion("course <=", value, "course");
			return this;
		}

		public Criteria andCourseIn(List values) {
			addCriterion("course in", values, "course");
			return this;
		}

		public Criteria andCourseNotIn(List values) {
			addCriterion("course not in", values, "course");
			return this;
		}

		public Criteria andCourseBetween(Long value1, Long value2) {
			addCriterion("course between", value1, value2, "course");
			return this;
		}

		public Criteria andCourseNotBetween(Long value1, Long value2) {
			addCriterion("course not between", value1, value2, "course");
			return this;
		}

		public Criteria andUnitContentIsNull() {
			addCriterion("unit_content is null");
			return this;
		}

		public Criteria andUnitContentIsNotNull() {
			addCriterion("unit_content is not null");
			return this;
		}

		public Criteria andUnitContentEqualTo(Long value) {
			addCriterion("unit_content =", value, "unitContent");
			return this;
		}

		public Criteria andUnitContentNotEqualTo(Long value) {
			addCriterion("unit_content <>", value, "unitContent");
			return this;
		}

		public Criteria andUnitContentGreaterThan(Long value) {
			addCriterion("unit_content >", value, "unitContent");
			return this;
		}

		public Criteria andUnitContentGreaterThanOrEqualTo(Long value) {
			addCriterion("unit_content >=", value, "unitContent");
			return this;
		}

		public Criteria andUnitContentLessThan(Long value) {
			addCriterion("unit_content <", value, "unitContent");
			return this;
		}

		public Criteria andUnitContentLessThanOrEqualTo(Long value) {
			addCriterion("unit_content <=", value, "unitContent");
			return this;
		}

		public Criteria andUnitContentIn(List values) {
			addCriterion("unit_content in", values, "unitContent");
			return this;
		}

		public Criteria andUnitContentNotIn(List values) {
			addCriterion("unit_content not in", values, "unitContent");
			return this;
		}

		public Criteria andUnitContentBetween(Long value1, Long value2) {
			addCriterion("unit_content between", value1, value2, "unitContent");
			return this;
		}

		public Criteria andUnitContentNotBetween(Long value1, Long value2) {
			addCriterion("unit_content not between", value1, value2,
					"unitContent");
			return this;
		}
	}
}